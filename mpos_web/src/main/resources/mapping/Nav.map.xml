<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.site.entity.Nav">
	<resultMap id="Nav" type="com.site.entity.Nav">
		<id property="id" column="id_" jdbcType="NUMERIC" />
		<result property="name" column="name_" jdbcType="VARCHAR" />
		<result property="parent" column="parent_" jdbcType="NUMERIC" />
		<result property="url" column="url_" jdbcType="VARCHAR" />

	</resultMap>
	<sql id="whereId">
		id_=#{id}
	</sql>
	<sql id="columns">
		id_,
		name_,
		parent_,
		url_
	</sql>
	<sql id="dynamicWhere">
		<where>
			<if test="id != null"> AND id_ =#{id} </if>
			<if test="name != null"> AND name_ like '%${name}%' </if>
			<if test="parent != null"> AND parent_ =#{parent} </if>
			<if test="url != null"> AND url_ like '%${url}%' </if>
		</where>
		order by order_no_
	</sql>


	<sql id="oneWhere">
		<where>
			<if test="id != null"> AND id_ =#{id} </if>
			<if test="name != null"> AND name_ =#{name} </if>
			<if test="parent != null"> AND parent_ =#{parent} </if>
			<if test="url != null"> AND url_ =#{url} </if>
		</where>
		order by order_no_
	</sql>

	<insert id="create" parameterType="com.site.entity.Nav">
		INSERT INTO nav_
		(
		<include refid="columns" />
		)
		VALUES
		(#{id,jdbcType=NUMERIC},#{name,jdbcType=VARCHAR},#{parent,jdbcType=NUMERIC},#{url,jdbcType=VARCHAR})
	</insert>

	<delete id="remove" parameterType="java.lang.Long">
		DELETE FROM nav_
		WHERE
		<include refid="whereId" />
	</delete>
	<update id="update" parameterType="com.site.entity.Nav">
		UPDATE nav_ SET
		name_=#{name,jdbcType=VARCHAR},
		parent_=#{parent,jdbcType=NUMERIC},
		url_=#{url,jdbcType=VARCHAR}
		WHERE
		<include refid="whereId" />

	</update>

	<select id="get" parameterType="java.lang.Long" resultMap="Nav">
		SELECT
		<include refid="columns" />
		FROM nav_
		WHERE
		<include refid="whereId" />
	</select>

	<select id="query" resultMap="Nav">
		SELECT
		<include refid="columns" />
		FROM nav_
		<include refid="dynamicWhere" />
	</select>
	<select id="search" resultMap="Nav">
		SELECT
		<include refid="columns" />
		FROM nav_
		<include refid="dynamicWhere" />
	</select>
	<select id="getOne" resultMap="Nav">
		SELECT
		<include refid="columns" />
		FROM nav_
		<include refid="oneWhere" />
	</select>

	<select id="getList" resultMap="Nav">
		SELECT
		<include refid="columns" />
		FROM nav_
		<include refid="oneWhere" />
	</select>
</mapper>