<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.site.entity.TCompany">
	<resultMap id="TCompany" type="com.site.entity.TCompany">
			<id property="id" column="id" jdbcType="VARCHAR" />
			<result property="comanyNo" column="comany_no" 
				jdbcType="VARCHAR" />
			<result property="name" column="name" 
				jdbcType="VARCHAR" />
			<result property="companyDesc" column="company_desc" 
				jdbcType="VARCHAR" />
			<result property="createBy" column="create_by" 
				jdbcType="VARCHAR" />
			<result property="createTime" column="create_time" 
				jdbcType="TIMESTAMP" />
			<result property="updateBy" column="update_by" 
				jdbcType="VARCHAR" />
			<result property="updateTime" column="update_time" 
				jdbcType="TIMESTAMP" />
			<result property="isFlag" column="is_flag" 
				jdbcType="VARCHAR" />
		
	</resultMap>
	<sql id="whereId">
                     id=#{id}
	</sql>
	<sql id="columns">
		id,
		comany_no,
		name,
		company_desc,
		create_by,
		create_time,
		update_by,
		update_time,
		is_flag
	</sql>
        <sql id="dynamicWhere">
		<where>
       <if test="id != null"> AND id like '%${id}%' </if>
       <if test="comanyNo != null"> AND comany_no like '%${comanyNo}%' </if>
       <if test="name != null"> AND name like '%${name}%' </if>
       <if test="companyDesc != null"> AND company_desc like '%${companyDesc}%' </if>
       <if test="createBy != null"> AND create_by like '%${createBy}%' </if>
                   <if test="createTime != null"> AND create_time =#{createTime} </if>
       <if test="updateBy != null"> AND update_by like '%${updateBy}%' </if>
                   <if test="updateTime != null"> AND update_time =#{updateTime} </if>
       <if test="isFlag != null"> AND is_flag like '%${isFlag}%' </if>
		</where>
	</sql>


	 <sql id="oneWhere">
		<where>
			<if test="id != null"> AND id =#{id} </if>
			<if test="comanyNo != null"> AND comany_no =#{comanyNo} </if>
			<if test="name != null"> AND name =#{name} </if>
			<if test="companyDesc != null"> AND company_desc =#{companyDesc} </if>
			<if test="createBy != null"> AND create_by =#{createBy} </if>
			<if test="createTime != null"> AND create_time =#{createTime} </if>
			<if test="updateBy != null"> AND update_by =#{updateBy} </if>
			<if test="updateTime != null"> AND update_time =#{updateTime} </if>
			<if test="isFlag != null"> AND is_flag =#{isFlag} </if>
		</where>
	</sql>

	<insert id="create" parameterType="com.site.entity.TCompany">
		INSERT INTO t_company
		(<include refid="columns"/>)
		VALUES
		(#{id,jdbcType=VARCHAR},#{comanyNo,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR},#{companyDesc,jdbcType=VARCHAR},#{createBy,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP},#{updateBy,jdbcType=VARCHAR},#{updateTime,jdbcType=TIMESTAMP},#{isFlag,jdbcType=VARCHAR})
	</insert>
	
	<delete id="remove" parameterType="java.lang.Long">
		DELETE FROM t_company 
		WHERE
		<include refid="whereId"/>
	</delete>
	<update id="update" parameterType="com.site.entity.TCompany">
		UPDATE t_company SET
                     comany_no=#{comanyNo,jdbcType=VARCHAR},
                     name=#{name,jdbcType=VARCHAR},
                     company_desc=#{companyDesc,jdbcType=VARCHAR},
                     create_by=#{createBy,jdbcType=VARCHAR},
                     create_time=#{createTime,jdbcType=TIMESTAMP},
                     update_by=#{updateBy,jdbcType=VARCHAR},
                     update_time=#{updateTime,jdbcType=TIMESTAMP},
                     is_flag=#{isFlag,jdbcType=VARCHAR}
		WHERE
		<include refid="whereId"/>
		
	</update>
		    
	<select id="get" parameterType="java.lang.Long" resultMap="TCompany">
		SELECT <include refid="columns"/>
		FROM t_company
		WHERE
		<include refid="whereId"/>
	</select>
	
	<select id="query" resultMap="TCompany">
		SELECT <include refid="columns"/>
		FROM t_company   
		<include refid="dynamicWhere" />
	</select>
	<select id="search" resultMap="TCompany">
		SELECT <include refid="columns"/>
		FROM t_company   
		<include refid="dynamicWhere" />
	</select>
	<select id="getOne" resultMap="TCompany">
		SELECT <include refid="columns"/>
		FROM t_company   
		<include refid="oneWhere" />
	</select>
	
	<select id="getList" resultMap="TCompany">
		SELECT <include refid="columns"/>
		FROM t_company   
		<include refid="oneWhere" />
	</select>
</mapper>